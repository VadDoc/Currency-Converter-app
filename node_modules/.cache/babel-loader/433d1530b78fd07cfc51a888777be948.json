{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430/React/Projects/Currency-Converter-app/src/common/components/Select/Select.tsx\";\nimport React from 'react';\nimport styles from './Select.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Select = _ref => {\n  let {\n    options,\n    onChange,\n    onChangeOption,\n    ...restProps\n  } = _ref;\n  const mappedOptions = options === null || options === void 0 ? void 0 : options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n    className: styles.option,\n    children: option\n  }, option + '-' + index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this)); // map options with key\n\n  const onChangeCallback = e => {\n    // onChange, onChangeOption\n    onChange && onChange(e);\n    onChangeOption && onChangeOption(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: styles.select,\n    onChange: onChangeCallback,\n    ...restProps,\n    children: mappedOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/Users/macbook/Documents/Работа/React/Projects/Currency-Converter-app/src/common/components/Select/Select.tsx"],"names":["React","styles","Select","options","onChange","onChangeOption","restProps","mappedOptions","map","option","index","onChangeCallback","e","currentTarget","value","select"],"mappings":";AAAA,OAAOA,KAAP,MAA0E,OAA1E;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AASA,MAAMC,MAAsC,GAAG,QAM1C;AAAA,MALD;AACIC,IAAAA,OADJ;AAEIC,IAAAA,QAFJ;AAEcC,IAAAA,cAFd;AAGI,OAAGC;AAHP,GAKC;AACD,QAAMC,aAAwC,GAAGJ,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEK,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,kBAC5D;AAAQ,IAAA,SAAS,EAAET,MAAM,CAACQ,MAA1B;AAAA,cACGA;AADH,KAAuCA,MAAM,GAAG,GAAT,GAAeC,KAAtD;AAAA;AAAA;AAAA;AAAA,UAD+C,CAAjD,CADC,CAKE;;AAEH,QAAMC,gBAAgB,GAAIC,CAAD,IAAuC;AAC5D;AACFR,IAAAA,QAAQ,IAAIA,QAAQ,CAACQ,CAAD,CAApB;AACAP,IAAAA,cAAc,IAAIA,cAAc,CAACO,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAhC;AACD,GAJD;;AAMA,sBACI;AAAQ,IAAA,SAAS,EAAEb,MAAM,CAACc,MAA1B;AAAkC,IAAA,QAAQ,EAAEJ,gBAA5C;AAAA,OAAkEL,SAAlE;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;KAAML,M;AA0BN,eAAeA,MAAf","sourcesContent":["import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport styles from './Select.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst Select: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: JSX.Element[] | undefined = options?.map((option, index) => (\n      <option className={styles.option} key={option + '-' + index}>\n        {option}\n      </option>\n    )) // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n      onChange && onChange(e)\n      onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select className={styles.select} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default Select\n"]},"metadata":{},"sourceType":"module"}