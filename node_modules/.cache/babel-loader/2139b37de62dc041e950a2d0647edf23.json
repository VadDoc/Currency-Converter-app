{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430/React/Projects/Currency-Converter-app/src/common/components/Input/Input.tsx\";\nimport React from 'react';\nimport styles from './Input.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  let {\n    type,\n    onChange,\n    onChangeText,\n    onKeyPress,\n    onEnter,\n    error,\n    className,\n    spanClassName,\n    ...restProps\n  } = _ref;\n\n  const onChangeCallback = e => {\n    onChange && onChange(e);\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n\n  const onKeyPressCallback = e => {\n    onKeyPress && onKeyPress(e);\n    onEnter && e.key === 'Enter' && onEnter();\n  };\n\n  const finalSpanClassName = `${styles.error} ${spanClassName ? spanClassName : ''}`;\n  const finalInputClassName = `${error ? styles.errorInput : styles.superInput} ${className}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      onChange: onChangeCallback,\n      onKeyPress: onKeyPressCallback,\n      className: finalInputClassName,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: finalSpanClassName,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/macbook/Documents/Работа/React/Projects/Currency-Converter-app/src/common/components/Input/Input.tsx"],"names":["React","styles","Input","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","onChangeCallback","e","currentTarget","value","onKeyPressCallback","key","finalSpanClassName","finalInputClassName","errorInput","superInput"],"mappings":";AAAA,OAAOA,KAAP,MAAwF,OAAxF;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,MAAMC,KAA0B,GAAG,QAU9B;AAAA,MATH;AACEC,IAAAA,IADF;AAEEC,IAAAA,QAFF;AAEYC,IAAAA,YAFZ;AAGEC,IAAAA,UAHF;AAGcC,IAAAA,OAHd;AAIEC,IAAAA,KAJF;AAKEC,IAAAA,SALF;AAKaC,IAAAA,aALb;AAOE,OAAGC;AAPL,GASG;;AACH,QAAMC,gBAAgB,GAAIC,CAAD,IAAsC;AAC7DT,IAAAA,QAAQ,IACLA,QAAQ,CAACS,CAAD,CADX;AAGAR,IAAAA,YAAY,IAAIA,YAAY,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAA5B;AACD,GALD;;AAMA,QAAMC,kBAAkB,GAAIH,CAAD,IAAwC;AACjEP,IAAAA,UAAU,IAAIA,UAAU,CAACO,CAAD,CAAxB;AAEAN,IAAAA,OAAO,IACJM,CAAC,CAACI,GAAF,KAAU,OADb,IAEGV,OAAO,EAFV;AAGD,GAND;;AAQA,QAAMW,kBAAkB,GAAI,GAAEjB,MAAM,CAACO,KAAM,IAAGE,aAAa,GAAGA,aAAH,GAAmB,EAAG,EAAjF;AACA,QAAMS,mBAAmB,GAAI,GAAEX,KAAK,GAAGP,MAAM,CAACmB,UAAV,GAAuBnB,MAAM,CAACoB,UAAW,IAAGZ,SAAU,EAA1F;AAEA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,QAAQ,EAAES,gBAFZ;AAGE,MAAA,UAAU,EAAEI,kBAHd;AAIE,MAAA,SAAS,EAAEG,mBAJb;AAAA,SAKMR;AALN;AAAA;AAAA;AAAA;AAAA,YADF,EAQGH,KAAK,iBAAI;AAAM,MAAA,SAAS,EAAEU,kBAAjB;AAAA,gBAAsCV;AAAtC;AAAA;AAAA;AAAA;AAAA,YARZ;AAAA,kBADF;AAYD,CAxCD;;KAAMN,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport styles from './Input.module.scss'\n\nconst Input: React.FC<PropsType> = (\n  {\n    type,\n    onChange, onChangeText,\n    onKeyPress, onEnter,\n    error,\n    className, spanClassName,\n\n    ...restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange\n    && onChange(e)\n\n    onChangeText && onChangeText(e.currentTarget.value)\n  }\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter\n    && e.key === 'Enter'\n    && onEnter()\n  }\n\n  const finalSpanClassName = `${styles.error} ${spanClassName ? spanClassName : ''}`\n  const finalInputClassName = `${error ? styles.errorInput : styles.superInput} ${className}`\n\n  return (\n    <>\n      <input\n        type={type}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps}\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  )\n}\n\nexport default Input\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\ntype PropsType = DefaultInputPropsType & {\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n}"]},"metadata":{},"sourceType":"module"}