{"ast":null,"code":"const initialState = {\n  query: {\n    base_currency: \"\"\n  },\n  data: {},\n  inputChangeFromValue: '',\n  inputChangeToValue: '',\n  selectCurrencyFromValue: '',\n  selectCurrencyToValue: ''\n};\nexport const converterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CONVERTER/GET_CURRENCY_API\":\n      return { ...state,\n        query: action.data.query,\n        data: action.data.data,\n        selectCurrencyFromValue: action.data.query.base_currency\n      };\n\n    case \"CONVERTER/SET_INPUT_CHANGE_FROM\":\n      return { ...state,\n        inputChangeFromValue: action.value\n      };\n\n    case \"CONVERTER/SET_INPUT_CHANGE_TO\":\n      return { ...state,\n        inputChangeToValue: action.value\n      };\n\n    case \"CONVERTER/SET_SELECT_CURRENCY_FROM\":\n      return { ...state,\n        selectCurrencyFromValue: action.value\n      };\n\n    case \"CONVERTER/SET_SELECT_CURRENCY_TO\":\n      return { ...state,\n        selectCurrencyToValue: action.value\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getCurrency = data => ({\n  type: 'CONVERTER/GET_CURRENCY_API',\n  data\n});\nexport const setInputChangeFromValue = value => ({\n  type: 'CONVERTER/SET_INPUT_CHANGE_FROM',\n  value\n});\nexport const setInputChangeToValue = value => ({\n  type: 'CONVERTER/SET_INPUT_CHANGE_TO',\n  value\n});\nexport const setSelectCurrencyFromValue = value => ({\n  type: 'CONVERTER/SET_SELECT_CURRENCY_FROM',\n  value\n});\nexport const setSelectCurrencyToValue = value => ({\n  type: 'CONVERTER/SET_SELECT_CURRENCY_TO',\n  value\n});","map":{"version":3,"sources":["/Users/macbook/Documents/Работа/React/Projects/Currency-Converter-app/src/store/converterReducer.ts"],"names":["initialState","query","base_currency","data","inputChangeFromValue","inputChangeToValue","selectCurrencyFromValue","selectCurrencyToValue","converterReducer","state","action","type","value","getCurrency","setInputChangeFromValue","setInputChangeToValue","setSelectCurrencyFromValue","setSelectCurrencyToValue"],"mappings":"AAEA,MAAMA,YAAuC,GAAG;AAC9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV,GADuC;AAI9CC,EAAAA,IAAI,EAAE,EAJwC;AAK9CC,EAAAA,oBAAoB,EAAE,EALwB;AAM9CC,EAAAA,kBAAkB,EAAE,EAN0B;AAO9CC,EAAAA,uBAAuB,EAAE,EAPqB;AAQ9CC,EAAAA,qBAAqB,EAAE;AARuB,CAAhD;AAWA,OAAO,MAAMC,gBAAgB,GAAG,YAAmF;AAAA,MAAlFC,KAAkF,uEAA1ET,YAA0E;AAAA,MAA5DU,MAA4D;;AACjH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,4BAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELR,QAAAA,KAAK,EAAES,MAAM,CAACP,IAAP,CAAYF,KAFd;AAGLE,QAAAA,IAAI,EAAEO,MAAM,CAACP,IAAP,CAAYA,IAHb;AAILG,QAAAA,uBAAuB,EAAEI,MAAM,CAACP,IAAP,CAAYF,KAAZ,CAAkBC;AAJtC,OAAP;;AAMF,SAAK,iCAAL;AACE,aAAO,EAAC,GAAGO,KAAJ;AAAWL,QAAAA,oBAAoB,EAAEM,MAAM,CAACE;AAAxC,OAAP;;AACF,SAAK,+BAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWJ,QAAAA,kBAAkB,EAAEK,MAAM,CAACE;AAAtC,OAAP;;AACF,SAAK,oCAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWH,QAAAA,uBAAuB,EAAEI,MAAM,CAACE;AAA3C,OAAP;;AACF,SAAK,kCAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,qBAAqB,EAAEG,MAAM,CAACE;AAAzC,OAAP;;AACF;AACE,aAAOH,KAAP;AAjBJ;AAmBD,CApBM;AAsBP,OAAO,MAAMI,WAAW,GAAIV,IAAD,KACxB;AAACQ,EAAAA,IAAI,EAAE,4BAAP;AAAqCR,EAAAA;AAArC,CADwB,CAApB;AAEP,OAAO,MAAMW,uBAAuB,GAAIF,KAAD,KACpC;AAACD,EAAAA,IAAI,EAAE,iCAAP;AAA0CC,EAAAA;AAA1C,CADoC,CAAhC;AAEP,OAAO,MAAMG,qBAAqB,GAAIH,KAAD,KAClC;AAACD,EAAAA,IAAI,EAAE,+BAAP;AAAwCC,EAAAA;AAAxC,CADkC,CAA9B;AAEP,OAAO,MAAMI,0BAA0B,GAAIJ,KAAD,KACvC;AAACD,EAAAA,IAAI,EAAE,oCAAP;AAA6CC,EAAAA;AAA7C,CADuC,CAAnC;AAEP,OAAO,MAAMK,wBAAwB,GAAIL,KAAD,KACrC;AAACD,EAAAA,IAAI,EAAE,kCAAP;AAA2CC,EAAAA;AAA3C,CADqC,CAAjC","sourcesContent":["import {getCurrencyResponseType} from \"../api/api\";\n\nconst initialState: ConverterInitialStateType = {\n  query: {\n    base_currency: \"\"\n  },\n  data: {},\n  inputChangeFromValue: '',\n  inputChangeToValue: '',\n  selectCurrencyFromValue: '',\n  selectCurrencyToValue: '',\n}\n\nexport const converterReducer = (state = initialState, action: ConverterActionsType): ConverterInitialStateType => {\n  switch (action.type) {\n    case \"CONVERTER/GET_CURRENCY_API\":\n      return {\n        ...state,\n        query: action.data.query,\n        data: action.data.data,\n        selectCurrencyFromValue: action.data.query.base_currency\n      }\n    case \"CONVERTER/SET_INPUT_CHANGE_FROM\":\n      return {...state, inputChangeFromValue: action.value}\n    case \"CONVERTER/SET_INPUT_CHANGE_TO\":\n      return {...state, inputChangeToValue: action.value}\n    case \"CONVERTER/SET_SELECT_CURRENCY_FROM\":\n      return {...state, selectCurrencyFromValue: action.value}\n    case \"CONVERTER/SET_SELECT_CURRENCY_TO\":\n      return {...state, selectCurrencyToValue: action.value}\n    default:\n      return state;\n  }\n}\n\nexport const getCurrency = (data: getCurrencyResponseType) =>\n  ({type: 'CONVERTER/GET_CURRENCY_API', data} as const)\nexport const setInputChangeFromValue = (value: string) =>\n  ({type: 'CONVERTER/SET_INPUT_CHANGE_FROM', value} as const)\nexport const setInputChangeToValue = (value: string) =>\n  ({type: 'CONVERTER/SET_INPUT_CHANGE_TO', value} as const)\nexport const setSelectCurrencyFromValue = (value: string) =>\n  ({type: 'CONVERTER/SET_SELECT_CURRENCY_FROM', value} as const)\nexport const setSelectCurrencyToValue = (value: string) =>\n  ({type: 'CONVERTER/SET_SELECT_CURRENCY_TO', value} as const)\n\nexport type ConverterInitialStateType = {\n  query: QueryParamsType\n  data: CurrencyExchangeRatesType\n  inputChangeFromValue: string\n  inputChangeToValue: string\n  selectCurrencyFromValue: string\n  selectCurrencyToValue: string\n}\nexport type CurrencyExchangeRatesType = { [key: string]: number }\nexport type QueryParamsType = { base_currency: string }\nexport type ConverterActionsType = ReturnType<typeof getCurrency>\n  | ReturnType<typeof setInputChangeFromValue>\n  | ReturnType<typeof setInputChangeToValue>\n  | ReturnType<typeof setSelectCurrencyFromValue>\n  | ReturnType<typeof setSelectCurrencyToValue>\n"]},"metadata":{},"sourceType":"module"}