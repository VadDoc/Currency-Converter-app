{"ast":null,"code":"import { setAppLoading, setError } from \"./appReducer\";\nimport { api } from \"../api/api\";\nimport axios from \"axios\";\nimport { getCurrency, setInputChangeFromValue } from \"./converterReducer\";\nexport const getCurrencyApi = baseCurrency => async dispatch => {\n  dispatch(setAppLoading(true));\n\n  try {\n    const response = await api.getCurrency(baseCurrency);\n    dispatch(getCurrency(response.data));\n    dispatch(setInputChangeFromValue(''));\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      if (error.response.status === 429) {\n        dispatch(setError(error.response.data.too_many_requests));\n      } else {\n        dispatch(setError('Sorry: we have some error. Try later'));\n      }\n    }\n  } finally {\n    dispatch(setAppLoading(false));\n  }\n};","map":{"version":3,"sources":["/Users/macbook/Documents/Работа/React/Projects/Currency-Converter-app/src/store/thunks.ts"],"names":["setAppLoading","setError","api","axios","getCurrency","setInputChangeFromValue","getCurrencyApi","baseCurrency","dispatch","response","data","error","isAxiosError","status","too_many_requests"],"mappings":"AACA,SAAQA,aAAR,EAAuBC,QAAvB,QAAsC,cAAtC;AACA,SAAQC,GAAR,QAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,uBAArB,QAAmD,oBAAnD;AAEA,OAAO,MAAMC,cAAc,GAAIC,YAAD,IAA0B,MAAOC,QAAP,IAA8B;AACpFA,EAAAA,QAAQ,CAACR,aAAa,CAAC,IAAD,CAAd,CAAR;;AACA,MAAI;AACF,UAAMS,QAAQ,GAAG,MAAMP,GAAG,CAACE,WAAJ,CAAgBG,YAAhB,CAAvB;AACAC,IAAAA,QAAQ,CAACJ,WAAW,CAACK,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACAF,IAAAA,QAAQ,CAACH,uBAAuB,CAAC,EAAD,CAAxB,CAAR;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd,QAAIR,KAAK,CAACS,YAAN,CAAmBD,KAAnB,KAA6BA,KAAK,CAACF,QAAvC,EAAiD;AAC/C,UAAGE,KAAK,CAACF,QAAN,CAAeI,MAAf,KAAwB,GAA3B,EAAgC;AAC9BL,QAAAA,QAAQ,CAACP,QAAQ,CAACU,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBI,iBAArB,CAAT,CAAR;AACD,OAFD,MAEO;AACLN,QAAAA,QAAQ,CAACP,QAAQ,CAAC,sCAAD,CAAT,CAAR;AACD;AACF;AACF,GAZD,SAYU;AACRO,IAAAA,QAAQ,CAACR,aAAa,CAAC,KAAD,CAAd,CAAR;AACD;AACF,CAjBM","sourcesContent":["import {Dispatch} from \"redux\";\nimport {setAppLoading, setError} from \"./appReducer\";\nimport {api} from \"../api/api\";\nimport axios from \"axios\";\nimport {getCurrency, setInputChangeFromValue} from \"./converterReducer\";\n\nexport const getCurrencyApi = (baseCurrency: string) => async (dispatch: Dispatch) => {\n  dispatch(setAppLoading(true));\n  try {\n    const response = await api.getCurrency(baseCurrency)\n    dispatch(getCurrency(response.data))\n    dispatch(setInputChangeFromValue(''))\n  } catch (error) {\n    if (axios.isAxiosError(error) && error.response) {\n      if(error.response.status===429) {\n        dispatch(setError(error.response.data.too_many_requests))\n      } else {\n        dispatch(setError('Sorry: we have some error. Try later'))\n      }\n    }\n  } finally {\n    dispatch(setAppLoading(false));\n  }\n}"]},"metadata":{},"sourceType":"module"}