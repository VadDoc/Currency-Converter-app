{"ast":null,"code":"const initialState = {\n  loading: false,\n  error: ''\n};\nexport const appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"APP/SET_LOADING_STATUS\":\n      return { ...state,\n        loading: action.value\n      };\n\n    case \"APP/SET_ERROR\":\n      return { ...state,\n        error: action.value\n      };\n\n    default:\n      return state;\n  }\n};\nexport const setAppLoading = value => ({\n  type: 'APP/SET_LOADING_STATUS',\n  value\n});\nexport const setError = value => ({\n  type: 'APP/SET_ERROR',\n  value\n});","map":{"version":3,"sources":["/Users/macbook/Documents/Работа/React/Projects/Currency-Converter-app/src/store/appReducer.ts"],"names":["initialState","loading","error","appReducer","state","action","type","value","setAppLoading","setError"],"mappings":"AAAA,MAAMA,YAA8B,GAAG;AACrCC,EAAAA,OAAO,EAAE,KAD4B;AAErCC,EAAAA,KAAK,EAAE;AAF8B,CAAvC;AAKA,OAAO,MAAMC,UAAU,GAAG,YAAiE;AAAA,MAAhEC,KAAgE,uEAAxDJ,YAAwD;AAAA,MAA1CK,MAA0C;;AACzF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wBAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAA3B,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAzB,OAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATM;AAWP,OAAO,MAAMI,aAAa,GAAID,KAAD,KAC1B;AAACD,EAAAA,IAAI,EAAE,wBAAP;AAAiCC,EAAAA;AAAjC,CAD0B,CAAtB;AAGP,OAAO,MAAME,QAAQ,GAAIF,KAAD,KACrB;AAACD,EAAAA,IAAI,EAAE,eAAP;AAAwBC,EAAAA;AAAxB,CADqB,CAAjB","sourcesContent":["const initialState: InitialStateType = {\n  loading: false,\n  error: '',\n}\n\nexport const appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case \"APP/SET_LOADING_STATUS\":\n      return {...state, loading: action.value}\n    case \"APP/SET_ERROR\":\n      return {...state, error: action.value}\n    default:\n      return state;\n  }\n}\n\nexport const setAppLoading = (value: boolean) =>\n  ({type: 'APP/SET_LOADING_STATUS', value} as const)\n\nexport const setError = (value: string) =>\n  ({type: 'APP/SET_ERROR', value} as const)\n\ntype InitialStateType = {\n  loading: boolean\n  error: string\n}\ntype ActionsType = ReturnType<typeof setAppLoading> | ReturnType<typeof setError>"]},"metadata":{},"sourceType":"module"}